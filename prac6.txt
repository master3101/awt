
Countdown timer with useEffect
-------->TimerUseEffect.js----


import React, {useState,useEffect} from 'react'
function Pr(){
    const [timeRemaining,setTimeReamining] = useState(10);
    useEffect(()=>{
        if(timeRemaining <=0){
            return;
        }
        const timerId = setInterval(()=>{
            setTimeReamining((prevTime) => prevTime - 1);
            console.log('remaining time:',timeRemaining)
        },1000);
        return() =>{
            console.log('Clearing up the time',timeRemaining)
            clearInterval(timerId);
        };
    },[timeRemaining]);

    return(
        <div>
            <p>Time Remaining: {timeRemaining}</p>
        </div>
    )
}

export default Pr;

import React from "react";
import Pr from "./components/TimerUseEffect"; 

function App() {
    return (
        <div className="App">
            <h1>React  Example</h1>
            <Pr /> 
        </div>
    );
}

export default App;

---------------------------------------------------------------------------------------------



Window Resize Listener using useEffect
------->WindowResize.js----

import React,{useState,useEffect} from 'react'
function WindowResizeComp(){
    const [windowSize,setWindowSize] = useState({width:window.innerWidth,height:window.innerHeight});

    useEffect(()=>{
        const handleResize = () =>{
            setWindowSize({width: window.innerWidth, height: window.innerHeight});
        };
        window.addEventListener('resize',handleResize);
        return()=>{
            window.removeEventListener('resize',handleResize);
        };
    },[]);

    return(
        <div>
            <p>Window size: {windowSize.width} x {windowSize.height}</p>
        </div>
    )
}
export default WindowResizeComp;

---------------------------------------------------------------------------------------------


Form Input Validation with useEffect
----->InputValidation.js--------

import React, { useEffect, useState } from "react";
const FormInputValidationComponent = () =>{
 const [inputValue,setInputValue] = useState('');
 const [isValid,setIsValid] = useState(true);
 useEffect(()=>{
    console.log('Input value changed:',inputValue);

    const isValidInput = inputValue.length > 5;
    setIsValid(isValidInput);
    },[inputValue]);
    
    const handleInputChange = (event) => {
        setInputValue(event.target.value)
    }

    const handleSubmit = (event) =>{
        event.preventDefault();
        if(isValid){
            console.log('From submitted with valid input:', inputValue);
        }
        else{
            console.log('Form submission blocked due to invalid input:',inputValue);
        }
    };

    return(
        <div>
            <form onSubmit={handleSubmit}>
                <label>Enter Value</label>
                <input
                type="text"
                value={inputValue}
                onChange={handleInputChange}
                style={{borderColor: isValid?'green':'red'}}
                />
                <button type="submit">Submit</button>
            </form>
            {!isValid && <p style={{color:'red'}}>Input must have more than 5 characters</p>}
        </div>
    )
}
export default FormInputValidationComponent;

---------------------------------------------------------------------------------------------

Data Fetching using useEffect
--------->DataFetching.js---------

import React, { useEffect, useState } from "react";

function DataFetchingComponent(){
    const [posts,setPosts] =  useState([]);
    useEffect(()=>{
        const fetchData = async () =>{
            const response = await fetch('https://jsonplaceholder.typicode.com/posts');
            
            const data = await response.json();
            setPosts(data);
        };
        fetchData()
    },[]);
    return(
        <div>
            <h1>Data Fetched</h1>
            {posts.map((post) =>
                <div>
                    {post.id}<br/>
                    Title:<h3>{post.title}</h3>
                    Body:<p>{post.body}</p>
                </div>
            )
            }
        </div>
    )
}
export default DataFetchingComponent;

------->App.jsx-----

import './App.css'
import DataFetchingComponent from './DataFetching'
import FormInputValidationComponent from './InputValidation'
import Pr6i from './TimerUseEffect'
import WindowResizeComp from './WindowResize'


function App() {
  return (
    <>
   <Pr6i/>
   <WindowResizeComp/>
    <FormInputValidationComponent/>
    <DataFetchingComponent/>
     </>
  )
}

export default App